---
- name: Prepare
  hosts: all
  roles:
    - role: '../'
  vars_files:
    - ../../../../defaults/stereum_defaults.yaml
  vars:
    ssv_service: ea17abb3-f219-46f0-8933-17d4ba688d26
    beacon_service: 0ec49452-f39e-4c68-9661-96facb1919f3
    geth_service: 12ac7669-1874-426a-aae7-65c381ed1ec8

  tasks:
    - name: Install python for Ansible (Ubuntu)
      apt:
        update_cache: yes
        name: pip
        state: present
      become: true
      changed_when: false
      when: ansible_distribution == "Ubuntu"

    - name: Install python for Ansible (CentOS 8)
      raw: yum install -y python38 tar && yum remove -y python36
      become: true
      changed_when: false
      when: ansible_distribution == "CentOS"

    - include_role:
        name: "setup"

    - include_role:
        name: "configure-firewall"

    - block:
      - set_fact:
          stereum: "{{ stereum_static | combine(stereum_args, recursive=True) }}"
      - name: "Include manage-service"
        include_role:
          name: "manage-service"
      vars:
        stereum_args:
          manage_service:
            save: true
            state: started
            configuration:
              service: GethService
              id: "{{ geth_service }}"
              image: "stratisevm/go-stratis:{{ stereum_static.defaults.versions.geth }}"
              ports:
                - 0.0.0.0:30303:30303/tcp
                - 0.0.0.0:30303:30303/udp
              entrypoint: ["geth"]
              env: {}
              command:
                - --auroria
                - --http
                - --datadir=/opt/app/geth
                - --http.addr=0.0.0.0
                - --http.vhosts=*
                - --http.api="engine,eth,web3,net,debug"
                - --http.corsdomain=*
                - --ws
                - --ws.port=8546
                - --ws.addr=0.0.0.0
                - --ws.api="debug,eth,net,web3"
                - --ws.origins=*
                - --authrpc.addr=0.0.0.0
                - --authrpc.vhosts=*
                - --authrpc.jwtsecret=/engine.jwt
              user: "2000"
              volumes:
                - "/opt/app/services/{{ geth_service }}/data:/opt/app/geth"
                - "/opt/app/services/{{ geth_service }}/engine.jwt:/engine.jwt"

    - block:
      - set_fact:
          stereum: "{{ stereum_static | combine(stereum_args, recursive=True) }}"
      - name: "Include manage-service"
        include_role:
          name: "manage-service"
      vars:
        stereum_args:
          manage_service:
            save: true
            state: started
            configuration:
              service: PrysmBeaconService
              id: "{{ prysm_service }}"
              image: "stratisevm/prysm-beacon-chain:{{ stereum_static.defaults.versions.prysm }}"
              ports:
                - 0.0.0.0:12000:12000/udp
                - 0.0.0.0:13000:13000/tcp
              env: {}
              entrypoint: []
              command: |
                /app/cmd/beacon-chain/beacon-chain
                --accept-terms-of-use=true
                --datadir=/opt/app/beacon
                --p2p-host-ip=""
                --p2p-host-dns=""
                --auroria=true
                --block-batch-limit=512
                --rpc-host=0.0.0.0
                --grpc-gateway-host=0.0.0.0
                --p2p-max-peers=100
                --execution-endpoint=http://stereum-{{ geth_service }}:8551
                --monitoring-port=8080
                --monitoring-host=0.0.0.0
                --jwt-secret=/engine.jwt
              user: "2000"
              volumes:
                - "/opt/app/services/{{ prysm_service }}/prysm/beacon:/opt/app/beacon"
                - "/opt/app/services/{{ geth_service }}/engine.jwt:/engine.jwt"

    # ssv operator keys
    - block:
      - name: "Include ssv-key-generator"
        include_role:
          name: "ssv-key-generator"
      vars:
        ssv_key_service: "{{ ssv_service }}"

    - name: Get configuration's content in variable
      slurp:
        src: "/etc/stereum/services/{{ ssv_service }}.yaml"
      register: config
      become: yes

    - name: Read service's configuration
      set_fact:
        config_content: "{{ config.content | b64decode | from_yaml }}"

    - name: Create service config directory
      file:
        path: /opt/app/services/{{ ssv_service }}/data/
        state: directory
        owner: "2000"
        group: "2000"
        mode: '0744'
      become: yes

    - name: Write SSV-Service's config
      copy:
        dest: "/opt/app/services/{{ ssv_service }}/data/config.yaml"
        content: |
          eth2:
            Network: "auroria"
            BeaconNodeAddr: "http://stereum-{{ beacon_service }}:3500"
          eth1:
            ETH1Addr: "ws://stereum-{{ geth_service }}:8546"
          OperatorPrivateKey: "{{ config_content.ssv_sk }}"
          global:
            LogLevel: "info"
          MetricsAPIPort: 15000
        owner: "2000"
        group: "2000"
        mode: '0644'
      become: yes

    # ssv service
    - block:
      - set_fact:
          stereum: "{{ stereum_static | combine(stereum_args, recursive=True) }}"
      - name: "Include manage-service"
        include_role:
          name: "manage-service"
      vars:
        stereum_args:
          manage_service:
            save: true
            state: started
            configuration:
              service: SSVNetworkService
              id: "{{ ssv_service }}"
              image: "bloxstaking/ssv-node:{{ stereum_static.defaults.versions.ssv_network }}"
              ports:
                - 0.0.0.0:12000:12000/udp
                - 0.0.0.0:13000:13000/tcp
              env:
                CONFIG_PATH: /data/config.yaml
              command: bash -c "make BUILD_PATH=/go/bin/ssvnode start-node &&
                                docker logs ssv_node"
              entrypoint: []
              user: "2000"
              volumes:
                - "/opt/app/services/{{ ssv_service }}/data:/data"

# EOF
