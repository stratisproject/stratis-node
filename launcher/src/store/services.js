import { defineStore } from "pinia";
export const useServices = defineStore("services", {
  state: () => {
    return {
      filteredServices: [],
      buttonState: [
        {
          id: 1,
          name: "graffiti",
          displayName: "Graffiti",
          icon: "/img/icon/staking-page-icons/option-graffiti.png",
          display: true,
        },
        {
          id: 2,
          name: "remove",
          displayName: "Remove all keys",
          icon: "/img/icon/staking-page-icons/option-remove.png",
          display: true,
        },
      ],
      backendServicesTimestamp: null,
      backendServices: [],
      installedServices: [],
      runningServices: [],
      allServices: [
        {
          id: 1,
          name: "Prysm",
          service: "PrysmBeaconService",
          category: "consensus",
          displayCategory: "csc",
          displayTooltip: false,
          displayPluginMenu: false,
          serviceIsPending: false,
          modifierPanel: false,
          replacePanel: false,
          addPanel: false,
          path: "/prysm",
          linkUrl: "",
          docsUrl: "https://docs.prylabs.network/docs/getting-started/",
          icon: require("../../public/img/icon/service-icons/consensus/Prysm.png"),
          sIcon: require("../../public/img/icon/service-icons/consensus/Prysm-s.png"),
          headerOption: false,
          expertOptionsModal: false,
          expertOptions: [
            {
              title: "External IP Address",
              type: "text",
              changeValue: null,
              icon: "/img/icon/service-setting-icons/ip-address.png",
              pattern: ["( --p2p-host-ip=)(.*)(\\n)"],
              commands: ["--p2p-host-ip"],
            },
            {
              title: "External TCP/UDP port",
              type: "text",
              changeValue: null,
              icon: "/img/icon/service-setting-icons/tcp_udp_port.png",
              pattern: [
                "(--p2p-tcp-port=)(.*)(\\n)",
                "(--p2p-udp-port=)(.*)(\\n)",
                "(^ {2}- (\\d{1,3}\\.){3}\\d{1,3}):([0-9]\\d{0,4}):([0-9]\\d{0,4})/tcp",
                "(^ {2}- (\\d{1,3}\\.){3}\\d{1,3}):([0-9]\\d{0,4}):([0-9]\\d{0,4})/udp",
              ],
              commands: ["--p2p-tcp-port", "--p2p-udp-port"],
              needsPortForwarding: true,
            },
          ],
          drag: true,
          state: "exited",
          config: {
            serviceID: "",
            configVersion: "",
            image: "",
            imageVersion: "",
            ports: [],
            volumes: [],
            network: "",
          },
        },
        {
          id: 2,
          name: "Prysm",
          service: "PrysmValidatorService",
          category: "validator",
          displayCategory: "vlc",
          displayTooltip: false,
          displayPluginMenu: false,
          serviceIsPending: false,
          modifierPanel: false,
          replacePanel: false,
          addPanel: false,
          path: "/prysm",
          linkUrl: "",
          docsUrl: "https://docs.prylabs.network/docs/getting-started/",
          icon: require("../../public/img/icon/service-icons/validator/Prysm-Validator-Circle.png"),
          sIcon: require("../../public/img/icon/service-icons/validator/Prysm-Validator-s.png"),
          headerOption: false,
          expertOptionsModal: false,
          expertOptions: [
            {
              title: "Default Fee Recipient",
              type: "text",
              changeValue: null,
              icon: "/img/icon/service-setting-icons/blockfee-recipient.png",
              pattern: ["(--suggested-fee-recipient=)(.*)(\\n)"],
              commands: ["--suggested-fee-recipient"],
            },
            {
              title: "Doppelganger Protection",
              type: "toggle",
              changeValue: true,
              icon: "/img/icon/service-setting-icons/doppelganger.png",
              pattern: ["(--enable-doppelganger=)(.*)(\\n)"],
              commands: ["--enable-doppelganger"],
            },
          ],
          drag: true,
          state: "exited",
          config: {
            serviceID: "",
            configVersion: "",
            image: "",
            imageVersion: "",
            ports: [],
            volumes: [],
            network: "",
          },
        },
        // {
        //   id: 9,
        //   name: "ssv.network",
        //   service: "SSVNetworkService",
        //   category: "validator",
        //   displayCategory: "vlc",
        //   displayTooltip: false,
        //   displayPluginMenu: false,
        //   serviceIsPending: false,
        //   modifierPanel: false,
        //   replacePanel: false,
        //   addPanel: false,
        //   path: "/ssv_network",
        //   icon: require("../../public/img/icon/service-icons/Other/ssv-network.png"),
        //   sIcon: require("../../public/img/icon/service-icons/Other/ssv-network-s.png"),
        //   hIcon: "/img/icon/service-icons/Other/ssv-network-s.png",
        //   linkUrl: "",
        //   docsUrl: "https://docs.ssv.network/",
        //   headerOption: true,
        //   expertOptionsModal: false,
        //   expertOptions: [],
        //   drag: true,
        //   state: "exited",
        //   config: {
        //     serviceID: "",
        //     configVersion: "",
        //     image: "",
        //     imageVersion: "",
        //     ports: [],
        //     volumes: [],
        //     network: "",
        //   },
        // },
        {
          id: 10,
          name: "Prometheus",
          service: "PrometheusService",
          category: "service",
          displayPluginMenu: false,
          serviceIsPending: false,
          modifierPanel: false,
          replacePanel: false,
          addPanel: false,
          path: "/prometheus",
          icon: require("../../public/img/icon/service-icons/Other/prometheus.png"),
          sIcon: require("../../public/img/icon/service-icons/Other/Prometheus-s.png"),
          hIcon: "/img/icon/service-icons/Other/Prometheus-s.png",
          linkUrl: "",
          docsUrl: "https://prometheus.io/docs/introduction/overview/",
          headerOption: true,
          expertOptionsModal: false,
          expertOptions: [
            {
              title: "Data retention (in days)",
              type: "text",
              changeValue: null,
              icon: "/img/icon/service-setting-icons/dataretention.png",
              pattern: ["(--storage.tsdb.retention.time=)(.*)(d)"],
              commands: ["--storage.tsdb.retention.time"],
            },
          ],
          tunnelLink: true,
          drag: true,
          state: "exited",
          config: {
            serviceID: "",
            configVersion: "",
            image: "",
            imageVersion: "",
            ports: [],
            volumes: [],
            network: "",
          },
        },
        {
          id: 11,
          name: "Grafana",
          service: "GrafanaService",
          displayPluginMenu: false,
          serviceIsPending: false,
          modifierPanel: false,
          replacePanel: false,
          addPanel: false,
          category: "service",
          path: "/grafana",
          icon: "/img/icon/service-icons/Other/grafana-service.png",
          sIcon: "/img/icon/service-icons/Other/Grafana-s.png",
          hIcon: "/img/icon/service-icons/Other/Grafana-s.png",
          linkUrl: "",
          docsUrl: "https://grafana.com/docs/grafana/latest/",
          headerOption: true,
          expertOptionsModal: false,
          expertOptions: [],
          tunnelLink: true,
          drag: true,
          state: "exited",
          config: {
            serviceID: "",
            configVersion: "",
            image: "",
            imageVersion: "",
            ports: [],
            volumes: [],
            network: "",
          },
        },
        {
          id: 12,
          name: "Geth",
          service: "GethService",
          category: "execution",
          displayCategory: "exc",
          displayTooltip: false,
          displayPluginMenu: false,
          serviceIsPending: false,
          modifierPanel: false,
          replacePanel: false,
          addPanel: false,
          path: "/geth",
          linkUrl: "",
          docsUrl: "https://geth.ethereum.org/docs/",
          icon: require("../..//public/img/icon/service-icons/execution/Geth.png"),
          sIcon: require("../../public/img/icon/service-icons/execution/Geth-s.png"),
          headerOption: false,
          expertOptionsModal: false,
          expertOptions: [],
          drag: true,
          state: "exited",
          config: {
            serviceID: "",
            configVersion: "",
            image: "",
            imageVersion: "",
            ports: [],
            volumes: [],
            network: "",
          },
        },
        {
          id: 15,
          name: "NodeExporter",
          service: "PrometheusNodeExporterService",
          displayPluginMenu: false,
          serviceIsPending: false,
          modifierPanel: false,
          replacePanel: false,
          addPanel: false,
          category: "service",
          path: "/prometheusnodeexporter",
          icon: "/img/icon/service-icons/Other/PrometheusNodeExporter.png",
          sIcon: "/img/icon/service-icons/Other/PrometheusNodeExporter-s.png",
          linkUrl: "",
          docsUrl: "https://github.com/prometheus/node_exporter",
          headerOption: false,
          expertOptionsModal: false,
          expertOptions: [],
          drag: true,
          state: "exited",
          config: {
            serviceID: "",
            configVersion: "",
            image: "",
            imageVersion: "",
            ports: [],
            volumes: [],
            network: "",
          },
        },
        // {
        //   id: 16,
        //   name: "Flashbots Mev Boost",
        //   service: "FlashbotsMevBoostService",
        //   displayPluginMenu: false,
        //   serviceIsPending: false,
        //   modifierPanel: false,
        //   replacePanel: false,
        //   addPanel: false,
        //   category: "service",
        //   path: "/flashbotsmevboost",
        //   icon: "/img/icon/service-icons/Other/mev-icon.png",
        //   sIcon: "/img/icon/service-icons/Other/mev-sIcon.png",
        //   hIcon: "/img/icon/service-icons/Other/mev-sIcon.png",
        //   linkUrl: "",
        //   docsUrl: "https://github.com/flashbots/mev-boost",
        //   headerOption: true,
        //   expertOptionsModal: false,
        //   expertOptions: [],
        //   drag: true,
        //   state: "exited",
        //   config: {
        //     serviceID: "",
        //     configVersion: "",
        //     image: "",
        //     imageVersion: "",
        //     ports: [],
        //     volumes: [],
        //     network: "",
        //   },
        // },
        {
          id: 17,
          name: "Web3Signer",
          service: "Web3SignerService",
          category: "validator",
          displayCategory: "vlc",
          displayTooltip: false,
          displayPluginMenu: false,
          modifierPanel: false,
          replacePanel: false,
          addPanel: false,
          path: "/web3signer",
          linkUrl: "",
          docsUrl: "https://docs.web3signer.consensys.net/en/latest/",
          icon: require("../../public/img/icon/service-icons/validator/Web3Signer-Circle.png"),
          sIcon: require("../../public/img/icon/service-icons/validator/Web3Signer-s.png"),
          headerOption: false,
          expertOptionsModal: false,
          serviceIsPending: false,
          expertOptions: [],
          drag: true,
          state: "exited",
          config: {
            serviceID: "",
            configVersion: "",
            image: "",
            imageVersion: "",
            ports: [],
            volumes: [],
            network: "",
          },
        },
        {
          id: 26,
          name: "MetricsExporter",
          service: "MetricsExporterService",
          displayPluginMenu: false,
          serviceIsPending: false,
          modifierPanel: false,
          replacePanel: false,
          addPanel: false,
          category: "service",
          path: "/metricsexporter",
          icon: "/img/icon/service-icons/Other/MetricsExporter.png",
          sIcon: "/img/icon/service-icons/Other/MetricsExporter-s.png",
          linkUrl: "",
          docsUrl: "https://github.com/gobitfly/eth2-client-metrics-exporter",
          headerOption: false,
          expertOptionsModal: false,
          expertOptions: [],
          drag: true,
          state: "exited",
          config: {
            serviceID: "",
            configVersion: "",
            image: "",
            imageVersion: "",
            ports: [],
            volumes: [],
            network: "",
          },
        },
        {
          id: 27,
          name: "External",
          service: "ExternalConsensusService",
          category: "consensus",
          displayCategory: "csc",
          displayTooltip: false,
          displayPluginMenu: false,
          serviceIsPending: false,
          addPanel: false,
          modifierPanel: false,
          replacePanel: false,
          path: "/external",
          linkUrl: "",
          docsUrl: "",
          icon: require("/public/img/icon/service-icons/Other/consensusExternal.png"),
          sIcon: require("/public/img/icon/service-icons/Other/consensusExternal.png"),
          headerOption: false,
          expertOptionsModal: false,
          expertOptions: [],
          drag: true,
          state: "exited",
          config: {
            serviceID: "",
            configVersion: "",
            image: "",
            imageVersion: "",
            ports: [],
            volumes: [],
            network: "",
            source: "",
            gateway: "",
          },
        },
        {
          id: 28,
          name: "External",
          service: "ExternalExecutionService",
          category: "execution",
          displayCategory: "exc",
          displayTooltip: false,
          displayPluginMenu: false,
          serviceIsPending: false,
          addPanel: false,
          modifierPanel: false,
          replacePanel: false,
          path: "/external",
          linkUrl: "",
          docsUrl: "",
          icon: require("/public/img/icon/service-icons/Other/executionExternal.png"),
          sIcon: require("/public/img/icon/service-icons/Other/executionExternal.png"),
          headerOption: false,
          expertOptionsModal: false,
          expertOptions: [],
          drag: true,
          state: "exited",
          config: {
            serviceID: "",
            configVersion: "",
            image: "",
            imageVersion: "",
            ports: [],
            volumes: [],
            network: "",
            source: "",
            jwtToken: "",
          },
        },
        // {
        //   id: 29,
        //   name: "Custom",
        //   service: "CustomService",
        //   displayPluginMenu: false,
        //   serviceIsPending: false,
        //   modifierPanel: false,
        //   replacePanel: false,
        //   addPanel: false,
        //   configPanel: false,
        //   category: "service",
        //   path: "/customservice",
        //   icon: "/img/icon/plugin-icons/Other/custom-service.png",
        //   sIcon: "/img/icon/plugin-icons/Other/custom-service-s.png",
        //   linkUrl: "",
        //   docsUrl: "https://www.google.com/",
        //   headerOption: false,
        //   expertOptionsModal: false,
        //   expertOptions: [],
        //   drag: true,
        //   state: "exited",
        //   config: {
        //     serviceID: "",
        //     configVersion: "",
        //     image: "",
        //     imageVersion: "",
        //     ports: [],
        //     volumes: [],
        //     network: "",
        //   },
        // },
        // {
        //   id: 31,
        //   name: "SSV DKG",
        //   service: "SSVDKGService",
        //   displayPluginMenu: false,
        //   serviceIsPending: false,
        //   modifierPanel: false,
        //   replacePanel: false,
        //   addPanel: false,
        //   configPanel: false,
        //   category: "service",
        //   path: "/ssvdkg",
        //   icon: "/img/icon/service-icons/Other/SSV-Network-DKG-Service.png",
        //   sIcon: "/img/icon/service-icons/Other/SSV-Network-DKG-s.png",
        //   hIcon: "/img/icon/service-icons/Other/SSV-Network-DKG-s.png",
        //   linkUrl: "",
        //   docsUrl: "https://docs.ssv.network/developers/tools/ssv-dkg-client/",
        //   headerOption: false, // TODO: Wire and enable DKG modal ASAP
        //   expertOptionsModal: false,
        //   expertOptions: [],
        //   drag: true,
        //   state: "exited",
        //   config: {
        //     serviceID: "",
        //     configVersion: "",
        //     image: "",
        //     imageVersion: "",
        //     ports: [],
        //     volumes: [],
        //     network: "",
        //   },
        // },
      ],
      versions: {},
      stereumVersion: {},
      launcherVersion: "",
      newUpdates: [],
    };
  },
  getters: {},
  actions: {},
});
